import tkinter
from tkinter.constants import LEFT, RIGHT
from mhd import Graph

form = tkinter.Tk()
form.title("MHD")

canvas = tkinter.Canvas(form, width = '1000', height = '600', bg='white')
canvas.pack(side = RIGHT)

label0 = tkinter.Label(text = 'Name of the stop')
entry0 = tkinter.Entry(form)
label0.pack()
entry0.pack()

label4 = tkinter.Label(text = 'Insert color of the stop')
label4.pack()

var1 = tkinter.IntVar()
var2 = tkinter.IntVar()
var3 = tkinter.IntVar()

c1 = tkinter.Checkbutton(form, text='red',variable=var1, onvalue=1, offvalue=0, command=lambda:insert_Node)
c2 = tkinter.Checkbutton(form, text='blue',variable=var2, onvalue=1, offvalue=0, command=lambda:insert_Node)
c3 = tkinter.Checkbutton(form, text='green',variable=var3, onvalue=1, offvalue=0, command=lambda:insert_Node)

c1.pack()
c2.pack()
c3.pack()

label5 = tkinter.Label(text = 'Insert color of the road')
label5.pack()

var4 = tkinter.IntVar()
var5 = tkinter.IntVar()
var6 = tkinter.IntVar()

c4 = tkinter.Checkbutton(form, text='red',variable=var4, onvalue=1, offvalue=0, command=lambda:connect_node)
c5 = tkinter.Checkbutton(form, text='blue',variable=var5, onvalue=1, offvalue=0, command=lambda:connect_node)
c6 = tkinter.Checkbutton(form, text='green',variable=var6, onvalue=1, offvalue=0, command=lambda:connect_node)

c4.pack()
c5.pack()
c6.pack()

label1 = tkinter.Label(text = "Enter time between stops")
label1.pack()
entry1 = tkinter.Entry(form)
entry1.pack()

label2 = tkinter.Label(text = "Enter start of the path")
label2.pack()
entry2 = tkinter.Entry(form)
entry2.pack()

label3 = tkinter.Label(text = "Enter end of the path")
label3.pack()
entry3 = tkinter.Entry(form)
entry3.pack()


button1 = tkinter.Button(text = 'Dijkstra', bd = "3px", command = lambda:runDijkstra(int(entry2.get()), int(entry3.get())))
button1.pack()


graph = Graph()
marked = None


def runDijkstra(start, end):
    graph.dijkstra(graph.nodes[start], graph.nodes[end], canvas)


def insert_Node(event):
    graph.insert(event.x, event.y, entry0.get(), var1.get(), var2.get(), var3.get())
    graph.draw(canvas)


def connect_node(event):
    global marked
    for node in graph.nodes:
        if event.x - 20 < node.x <= event.x + 20 and event.y - 20 < node.y <= event.y + 20:
            if marked == None:
                marked = node
            else:
                if marked == node:
                    pass
                else:
                    value = entry1.get()
                    if value == '':
                        value = int(0)
                    graph.connect(node, marked, value, var4.get(), var5.get(), var6.get(), entry0.get())
                    marked = None
                    graph.draw(canvas)


def remove(event):
    for node in graph.nodes:
        if event.x - 20 < node.x <= event.x + 20 and event.y - 20 < node.y <= event.y + 20:
            graph.remove(node)
            graph.draw(canvas)
            break

canvas.bind("<Button-1>", insert_Node)
canvas.bind("<Button-2>", remove)
canvas.bind("<Button-3>", connect_node)

canvas.mainloop()
